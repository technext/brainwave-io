{"version":3,"sources":["utils.js","detector.js","node.js","countup.js","navbar.js","scroll-to-top.js","swiper.js","video-controller.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","concat","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","result","exec","m","r","g","b","parseInt","rgbaColor","color","arguments","undefined","alpha","getColor","name","dom","documentElement","getComputedStyle","getPropertyValue","trim","getColors","primary","secondary","success","info","warning","danger","light","dark","white","black","emphasis","getSubtleColors","getGrays","100","200","300","400","500","600","700","800","900","1000","1100","hasClass","className","classList","value","includes","addClass","add","removeClass","remove","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","scrollTop","pageYOffset","top","left","isScrolledIntoView","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","vertInView","height","horInView","width","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","breakpoint","classes","split","filter","cls","pop","getSystemTheme","matchMedia","matches","setCookie","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","getItemFromStore","key","defaultValue","store","localStorage","getItem","_unused","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","getDates","startDate","endDate","interval","from","v","i","valueOf","getPastDates","duration","days","date","setDate","getDate","getRandomNumber","min","max","Math","floor","random","utils","detectorInit","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","DomNode","node","_classCallCheck","this","_createClass","isValidNode","toggle","contains","setAttribute","removeAttribute","event","cb","countupInit","countUp","querySelectorAll","forEach","_utils$getData","autoIncreasing","options","_objectWithoutProperties","_excluded","endValue","CountUp","_objectSpread","enableScrollOnce","error","update","setInterval","clearInterval","console","start","navbarInit","handleAlpha","navbar","scrollY","style","backgroundColor","navbarItemContainer","target","closest","navbarToggler","scrollToTopInit","btn","display","onscroll","scrollTo","swiperInit","Swiper","swiper","newSwiper","navbarVerticalToggle","videoControllerInit","videoContainer","container","videoPaused","videoPlayer","playButton","paused","play","pause"],"mappings":"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","file":"theme.min.js","sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                    Utils                                   */\n/* -------------------------------------------------------------------------- */\nconst docReady = fn => {\n  // see if DOM is already available\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', fn);\n  } else {\n    setTimeout(fn, 1);\n  }\n};\n\nconst resize = fn => window.addEventListener('resize', fn);\n\nconst isIterableArray = array => Array.isArray(array) && !!array.length;\n\nconst camelize = str => {\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) =>\n    c ? c.toUpperCase() : ''\n  );\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\n};\n\nconst getData = (el, data) => {\n  try {\n    return JSON.parse(el.dataset[camelize(data)]);\n  } catch (e) {\n    return el.dataset[camelize(data)];\n  }\n};\n\n/* ----------------------------- Colors function ---------------------------- */\n\nconst hexToRgb = hexValue => {\n  let hex;\n  hexValue.indexOf('#') === 0\n    ? (hex = hexValue.substring(1))\n    : (hex = hexValue);\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n    hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b)\n  );\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgbaColor = (color = '#fff', alpha = 0.5) =>\n  `rgba(${hexToRgb(color)}, ${alpha})`;\n\n/* --------------------------------- Colors --------------------------------- */\n\nconst getColor = (name, dom = document.documentElement) =>\n  getComputedStyle(dom).getPropertyValue(`--brainwaveio-${name}`).trim();\n\nconst getColors = dom => ({\n  primary: getColor('primary', dom),\n  secondary: getColor('secondary', dom),\n  success: getColor('success', dom),\n  info: getColor('info', dom),\n  warning: getColor('warning', dom),\n  danger: getColor('danger', dom),\n  light: getColor('light', dom),\n  dark: getColor('dark', dom),\n  white: getColor('white', dom),\n  black: getColor('black', dom),\n  emphasis: getColor('emphasis-color', dom)\n});\n\nconst getSubtleColors = dom => ({\n  primary: getColor('primary-bg-subtle', dom),\n  secondary: getColor('secondary-bg-subtle', dom),\n  success: getColor('success-bg-subtle', dom),\n  info: getColor('info-bg-subtle', dom),\n  warning: getColor('warning-bg-subtle', dom),\n  danger: getColor('danger-bg-subtle', dom),\n  light: getColor('light-bg-subtle', dom),\n  dark: getColor('dark-bg-subtle', dom)\n});\n\nconst getGrays = dom => ({\n  100: getColor('gray-100', dom),\n  200: getColor('gray-200', dom),\n  300: getColor('gray-300', dom),\n  400: getColor('gray-400', dom),\n  500: getColor('gray-500', dom),\n  600: getColor('gray-600', dom),\n  700: getColor('gray-700', dom),\n  800: getColor('gray-800', dom),\n  900: getColor('gray-900', dom),\n  1000: getColor('gray-1000', dom),\n  1100: getColor('gray-1100', dom)\n});\n\nconst hasClass = (el, className) => {\n  !el && false;\n  return el.classList.value.includes(className);\n};\n\nconst addClass = (el, className) => {\n  el.classList.add(className);\n};\n\nconst removeClass = (el, className) => {\n  el.classList.remove(className);\n};\n\nconst getOffset = el => {\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n};\n\nfunction isScrolledIntoView(el) {\n  const rect = el.getBoundingClientRect();\n  const windowHeight =\n    window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n  const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n\n  return vertInView && horInView;\n}\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1540\n};\n\nconst getBreakpoint = el => {\n  const classes = el && el.classList.value;\n  let breakpoint;\n  if (classes) {\n    breakpoint =\n      breakpoints[\n        classes\n          .split(' ')\n          .filter(cls => cls.includes('navbar-expand-'))\n          .pop()\n          .split('-')\n          .pop()\n      ];\n  }\n  return breakpoint;\n};\n\nconst getSystemTheme = () => (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n\n/* --------------------------------- Cookie --------------------------------- */\n\nconst setCookie = (name, value, expire) => {\n  const expires = new Date();\n  expires.setTime(expires.getTime() + expire);\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`;\n};\n\nconst getCookie = name => {\n  const keyValue = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n  return keyValue ? keyValue[2] : keyValue;\n};\n\nconst settings = {\n  tinymce: {\n    theme: 'oxide'\n  },\n  chart: {\n    borderColor: 'rgba(255, 255, 255, 0.8)'\n  }\n};\n/* ---------------------------------- Store --------------------------------- */\n\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\n  try {\n    return JSON.parse(store.getItem(key)) || defaultValue;\n  } catch {\n    return store.getItem(key) || defaultValue;\n  }\n};\n\nconst setItemToStore = (key, payload, store = localStorage) =>\n  store.setItem(key, payload);\nconst getStoreSpace = (store = localStorage) =>\n  parseFloat(\n    (\n      escape(encodeURIComponent(JSON.stringify(store))).length /\n      (1024 * 1024)\n    ).toFixed(2)\n  );\n\n/* get Dates between */\n\nconst getDates = (startDate, endDate, interval = 1000 * 60 * 60 * 24) => {\n  const duration = endDate - startDate;\n  const steps = duration / interval;\n  return Array.from(\n    { length: steps + 1 },\n    (v, i) => new Date(startDate.valueOf() + interval * i)\n  );\n};\n\nconst getPastDates = duration => {\n  let days;\n\n  switch (duration) {\n    case 'week':\n      days = 7;\n      break;\n    case 'month':\n      days = 30;\n      break;\n    case 'year':\n      days = 365;\n      break;\n\n    default:\n      days = duration;\n  }\n\n  const date = new Date();\n  const endDate = date;\n  const startDate = new Date(new Date().setDate(date.getDate() - (days - 1)));\n  return getDates(startDate, endDate);\n};\n\n/* Get Random Number */\nconst getRandomNumber = (min, max) =>\n  Math.floor(Math.random() * (max - min) + min);\n\nconst utils = {\n  docReady,\n  breakpoints,\n  resize,\n  isIterableArray,\n  camelize,\n  getData,\n  hasClass,\n  addClass,\n  hexToRgb,\n  rgbaColor,\n  getColor,\n  getColors,\n  getSubtleColors,\n  getGrays,\n  getOffset,\n  isScrolledIntoView,\n  getBreakpoint,\n  setCookie,\n  getCookie,\n  settings,\n  getItemFromStore,\n  setItemToStore,\n  getStoreSpace,\n  getDates,\n  getPastDates,\n  getRandomNumber,\n  removeClass,\n  getSystemTheme\n};\n\nexport default utils;\n","import { addClass } from './utils';\n/* -------------------------------------------------------------------------- */\n/*                                  Detector                                  */\n/* -------------------------------------------------------------------------- */\n\nconst detectorInit = () => {\n  const { is } = window;\n  const html = document.querySelector('html');\n\n  is.opera() && addClass(html, 'opera');\n  is.mobile() && addClass(html, 'mobile');\n  is.firefox() && addClass(html, 'firefox');\n  is.safari() && addClass(html, 'safari');\n  is.ios() && addClass(html, 'ios');\n  is.iphone() && addClass(html, 'iphone');\n  is.ipad() && addClass(html, 'ipad');\n  is.ie() && addClass(html, 'ie');\n  is.edge() && addClass(html, 'edge');\n  is.chrome() && addClass(html, 'chrome');\n  is.mac() && addClass(html, 'osx');\n  is.windows() && addClass(html, 'windows');\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\n};\n\nexport default detectorInit;\n","/*-----------------------------------------------\n|   DomNode\n-----------------------------------------------*/\nclass DomNode {\n  constructor(node) {\n    this.node = node;\n  }\n\n  addClass(className) {\n    this.isValidNode() && this.node.classList.add(className);\n  }\n\n  removeClass(className) {\n    this.isValidNode() && this.node.classList.remove(className);\n  }\n\n  toggleClass(className) {\n    this.isValidNode() && this.node.classList.toggle(className);\n  }\n\n  hasClass(className) {\n    this.isValidNode() && this.node.classList.contains(className);\n  }\n\n  data(key) {\n    if (this.isValidNode()) {\n      try {\n        return JSON.parse(this.node.dataset[this.camelize(key)]);\n      } catch (e) {\n        return this.node.dataset[this.camelize(key)];\n      }\n    }\n    return null;\n  }\n\n  attr(name) {\n    return this.isValidNode() && this.node[name];\n  }\n\n  setAttribute(name, value) {\n    this.isValidNode() && this.node.setAttribute(name, value);\n  }\n\n  removeAttribute(name) {\n    this.isValidNode() && this.node.removeAttribute(name);\n  }\n\n  setProp(name, value) {\n    this.isValidNode() && (this.node[name] = value);\n  }\n\n  on(event, cb) {\n    this.isValidNode() && this.node.addEventListener(event, cb);\n  }\n\n  isValidNode() {\n    return !!this.node;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  camelize(str) {\n    const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n    return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\n  }\n}\n\nexport default DomNode;\n","import utils from './utils';\n\n/* -------------------------------------------------------------------------- */\n/*                                  Count Up                                  */\n/* -------------------------------------------------------------------------- */\n\nconst countupInit = () => {\n  if (window.countUp) {\n    const countups = document.querySelectorAll('[data-countup]');\n    countups.forEach((node) => {\n      const { autoIncreasing, ...options } = utils.getData(node, 'countup');\n      let { endValue } = options;\n      const countUp = new window.countUp.CountUp(node, endValue, {\n        duration: 5,\n        enableScrollOnce: true,\n        ...options,\n      });\n      if (!countUp.error && autoIncreasing) {\n        countUp.update(endValue);\n        const interval = setInterval(() => {\n          endValue += 1;\n          countUp.update(endValue);\n        }, 10000);\n        window.addEventListener('close', () => {\n          clearInterval(interval);\n        });\n      } else if (!countUp.error) {\n        countUp.start();\n      } else {\n        console.error(countUp.error);\n      }\n    });\n  }\n};\n\nexport default countupInit;\n","/*-----------------------------------------------\n|  Navbar\n-----------------------------------------------*/\n\nconst navbarInit = () => {\n  const navbar = document.querySelector('[data-navbar-soft-on-scroll]');\n\n  if (navbar) {\n    const windowHeight = window.innerHeight;\n    const handleAlpha = () => {\n      const scrollTop = window.scrollY;\n      let alpha = (scrollTop / windowHeight) * 2;\n      alpha >= 1 && (alpha = 1);\n      navbar.style.backgroundColor = `rgba(49, 60, 89, ${alpha})`;\n    };\n    handleAlpha();\n    document.addEventListener('scroll', () => handleAlpha());\n  }\n\n  const navbarNav = document.querySelector('[data-navbar-nav]');\n  navbarNav.addEventListener('click', (event) => {\n    if (event.target.closest('li')) {\n      const navbarToggler = document.querySelector('[data-bs-toggle]');\n      const navbarItemContainer = document.querySelector('[data-navbar-collapse]');\n      navbarToggler.setAttribute('aria-expanded', false);\n      navbarItemContainer.classList.remove('show');\n      navbarToggler.classList.add('collapsed');\n    }\n  });\n};\n\nexport default navbarInit;\n","/*-----------------------------------------------\n|  Scroll To Top\n-----------------------------------------------*/\n\nconst scrollToTopInit = () => {\n  const btn = document.querySelector('[data-scroll-top]');\n\n  if (btn) {\n    btn.style.display = 'none';\n    // eslint-disable-next-line func-names\n    window.onscroll = () => {\n\n      if (window.scrollY > 550) {\n        btn.style.display = 'block';\n      } else {\n        btn.style.display = 'none';\n      }\n    };\n    btn.addEventListener('click', () => {\n      window.scrollTo(0, 0);\n    });\n  }\n};\n\nexport default scrollToTopInit;\n","import utils from './utils';\n\n/*-----------------------------------------------\n|  Swiper\n-----------------------------------------------*/\n\nconst swiperInit = () => {\n  if (window.Swiper) {\n    const swipers = document.querySelectorAll('[data-swiper]');\n    swipers.forEach(swiper => {\n      const options = utils.getData(swiper, 'swiper');\n      const newSwiper = new window.Swiper(swiper, {\n        ...options\n      });\n      const navbarVerticalToggle = document.querySelector(\n        '.navbar-vertical-toggle'\n      );\n      if (navbarVerticalToggle) {\n        navbarVerticalToggle.addEventListener('navbar.vertical.toggle', () => {\n          newSwiper.update();\n        });\n      }\n    });\n  }\n};\n\nexport default swiperInit;\n","/* -------------------------------------------------------------------------- */\n/*                    Video Controller                                        */\n/* -------------------------------------------------------------------------- */\n\nconst videoControllerInit = () => {\n  const videoContainer = document.querySelectorAll('[data-video-player-container]');\n  if (videoContainer) {\n    videoContainer.forEach(container => {\n      const videoPlayer = container.querySelector('[data-video-player');\n      const playButton = container.querySelector('[data-play-button]');\n\n      const videoPlayed = () => {\n        container.classList.toggle('video-player-paused');\n        container.classList.toggle('video-player-play');\n      };\n\n      const videoPaused = () => {\n        container.classList.toggle('video-player-play');\n        container.classList.toggle('video-player-paused');\n      };\n      playButton.addEventListener('click', () => {\n        if (videoPlayer.paused) {\n          videoPlayer.play();\n          videoPaused();\n        } else {\n          videoPlayer.pause();\n          videoPlayed();\n        }\n      });\n      videoPlayer.addEventListener('ended', videoPaused);\n    });\n  }\n};\n\nexport default videoControllerInit;\n","import { docReady } from './utils';\nimport detectorInit from './detector';\nimport navbarInit from './navbar';\nimport swiperInit from './swiper';\nimport countupInit from './countup';\nimport scrollToTopInit from './scroll-to-top';\nimport videoControllerInit from './video-controller';\n/* -------------------------------------------------------------------------- */\n/*                            Theme Initialization                            */\n/* -------------------------------------------------------------------------- */\ndocReady(detectorInit);\ndocReady(navbarInit);\ndocReady(swiperInit);\ndocReady(countupInit);\ndocReady(scrollToTopInit);\ndocReady(videoControllerInit);\n"]}