{"version":3,"sources":["utils.js","detector.js","node.js","countup.js","navbar.js","scroll-to-top.js","swiper.js","video-controller.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","concat","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","shorthandRegex","result","exec","m","r","g","b","parseInt","rgbaColor","color","arguments","undefined","alpha","getColor","name","dom","documentElement","getComputedStyle","getPropertyValue","trim","getColors","primary","secondary","success","info","warning","danger","light","dark","white","black","emphasis","getSubtleColors","getGrays","hasClass","className","classList","value","includes","addClass","add","removeClass","remove","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","scrollTop","pageYOffset","top","left","isScrolledIntoView","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","vertInView","height","horInView","width","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","classes","breakpoint","split","filter","cls","pop","getSystemTheme","matchMedia","matches","setCookie","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","getItemFromStore","key","defaultValue","store","localStorage","getItem","_unused","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","getDates","startDate","endDate","interval","duration","steps","from","v","i","valueOf","getPastDates","days","date","setDate","getDate","getRandomNumber","min","max","Math","floor","random","utils","detectorInit","_window","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","DomNode","node","_classCallCheck","_createClass","isValidNode","toggleClass","toggle","contains","attr","setAttribute","removeAttribute","setProp","on","event","cb","countupInit","countUp","countups","querySelectorAll","forEach","_utils$getData","autoIncreasing","options","_objectWithoutProperties","_excluded","endValue","CountUp","_objectSpread","enableScrollOnce","error","update","setInterval","clearInterval","start","console","navbarInit","navbar","handleAlpha","scrollY","style","backgroundColor","navbarNav","target","closest","navbarToggler","navbarItemContainer","scrollToTopInit","btn","display","onscroll","scrollTo","swiperInit","Swiper","swipers","swiper","newSwiper","navbarVerticalToggle","videoControllerInit","videoContainer","parent","videoPlayer","playButton","videoPlayedState","videoPuasedState","paused","play","pause"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,IAAAA,QAAA,GAAA,SAAAA,QAAAA,CAAAC,EAAA,EAAA;EACA;EACA,IAAAC,QAAA,CAAAC,UAAA,KAAA,SAAA,EAAA;IACAD,QAAA,CAAAE,gBAAA,CAAA,kBAAA,EAAAH,EAAA,CAAA;EACA,CAAA,MAAA;IACAI,UAAA,CAAAJ,EAAA,EAAA,CAAA,CAAA;EACA;AACA,CAAA;AAEA,IAAAK,MAAA,GAAA,SAAAA,MAAAA,CAAAL,EAAA;EAAA,OAAAM,MAAA,CAAAH,gBAAA,CAAA,QAAA,EAAAH,EAAA,CAAA;AAAA;AAEA,IAAAO,eAAA,GAAA,SAAAA,eAAAA,CAAAC,KAAA;EAAA,OAAAC,KAAA,CAAAC,OAAA,CAAAF,KAAA,CAAA,IAAA,CAAA,CAAAA,KAAA,CAAAG,MAAA;AAAA;AAEA,IAAAC,QAAA,GAAA,SAAAA,QAAAA,CAAAC,GAAA,EAAA;EACA,IAAAC,IAAA,GAAAD,GAAA,CAAAE,OAAA,CAAA,eAAA,EAAA,UAAAC,CAAA,EAAAC,CAAA;IAAA,OACAA,CAAA,GAAAA,CAAA,CAAAC,WAAA,CAAA,CAAA,GAAA,EAAA;EAAA,CACA,CAAA;EACA,UAAAC,MAAA,CAAAL,IAAA,CAAAM,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAAC,WAAA,CAAA,CAAA,EAAAF,MAAA,CAAAL,IAAA,CAAAM,MAAA,CAAA,CAAA,CAAA;AACA,CAAA;AAEA,IAAAE,OAAA,GAAA,SAAAA,OAAAA,CAAAC,EAAA,EAAAC,IAAA,EAAA;EACA,IAAA;IACA,OAAAC,IAAA,CAAAC,KAAA,CAAAH,EAAA,CAAAI,OAAA,CAAAf,QAAA,CAAAY,IAAA,CAAA,CAAA,CAAA;EACA,CAAA,CAAA,OAAAI,CAAA,EAAA;IACA,OAAAL,EAAA,CAAAI,OAAA,CAAAf,QAAA,CAAAY,IAAA,CAAA,CAAA;EACA;AACA,CAAA;;AAEA;;AAEA,IAAAK,QAAA,GAAA,SAAAA,QAAAA,CAAAC,QAAA,EAAA;EACA,IAAAC,GAAA;EACAD,QAAA,CAAAE,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GACAD,GAAA,GAAAD,QAAA,CAAAG,SAAA,CAAA,CAAA,CAAA,GACAF,GAAA,GAAAD,QAAA;EACA;EACA,IAAAI,cAAA,GAAA,kCAAA;EACA,IAAAC,MAAA,GAAA,2CAAA,CAAAC,IAAA,CACAL,GAAA,CAAAhB,OAAA,CAAAmB,cAAA,EAAA,UAAAG,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA;IAAA,OAAAF,CAAA,GAAAA,CAAA,GAAAC,CAAA,GAAAA,CAAA,GAAAC,CAAA,GAAAA,CAAA;EAAA,EACA,CAAA;EACA,OAAAL,MAAA,GACA,CACAM,QAAA,CAAAN,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EACAM,QAAA,CAAAN,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EACAM,QAAA,CAAAN,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CACA,GACA,IAAA;AACA,CAAA;AAEA,IAAAO,SAAA,GAAA,SAAAA,SAAAA,CAAA;EAAA,IAAAC,KAAA,GAAAC,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA,MAAA;EAAA,IAAAE,KAAA,GAAAF,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA,GAAA;EAAA,eAAAzB,MAAA,CACAU,QAAA,CAAAc,KAAA,CAAA,QAAAxB,MAAA,CAAA2B,KAAA;AAAA,CAAA;;AAEA;;AAEA,IAAAC,QAAA,GAAA,SAAAA,QAAAA,CAAAC,IAAA;EAAA,IAAAC,GAAA,GAAAL,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA3C,QAAA,CAAAiD,eAAA;EAAA,OACAC,gBAAA,CAAAF,GAAA,CAAA,CAAAG,gBAAA,kBAAAjC,MAAA,CAAA6B,IAAA,CAAA,CAAA,CAAAK,IAAA,CAAA,CAAA;AAAA;AAEA,IAAAC,SAAA,GAAA,SAAAA,SAAAA,CAAAL,GAAA;EAAA,OAAA;IACAM,OAAA,EAAAR,QAAA,CAAA,SAAA,EAAAE,GAAA,CAAA;IACAO,SAAA,EAAAT,QAAA,CAAA,WAAA,EAAAE,GAAA,CAAA;IACAQ,OAAA,EAAAV,QAAA,CAAA,SAAA,EAAAE,GAAA,CAAA;IACAS,IAAA,EAAAX,QAAA,CAAA,MAAA,EAAAE,GAAA,CAAA;IACAU,OAAA,EAAAZ,QAAA,CAAA,SAAA,EAAAE,GAAA,CAAA;IACAW,MAAA,EAAAb,QAAA,CAAA,QAAA,EAAAE,GAAA,CAAA;IACAY,KAAA,EAAAd,QAAA,CAAA,OAAA,EAAAE,GAAA,CAAA;IACAa,IAAA,EAAAf,QAAA,CAAA,MAAA,EAAAE,GAAA,CAAA;IACAc,KAAA,EAAAhB,QAAA,CAAA,OAAA,EAAAE,GAAA,CAAA;IACAe,KAAA,EAAAjB,QAAA,CAAA,OAAA,EAAAE,GAAA,CAAA;IACAgB,QAAA,EAAAlB,QAAA,CAAA,gBAAA,EAAAE,GAAA;EACA,CAAA;AAAA,CAAA;AAEA,IAAAiB,eAAA,GAAA,SAAAA,eAAAA,CAAAjB,GAAA;EAAA,OAAA;IACAM,OAAA,EAAAR,QAAA,CAAA,mBAAA,EAAAE,GAAA,CAAA;IACAO,SAAA,EAAAT,QAAA,CAAA,qBAAA,EAAAE,GAAA,CAAA;IACAQ,OAAA,EAAAV,QAAA,CAAA,mBAAA,EAAAE,GAAA,CAAA;IACAS,IAAA,EAAAX,QAAA,CAAA,gBAAA,EAAAE,GAAA,CAAA;IACAU,OAAA,EAAAZ,QAAA,CAAA,mBAAA,EAAAE,GAAA,CAAA;IACAW,MAAA,EAAAb,QAAA,CAAA,kBAAA,EAAAE,GAAA,CAAA;IACAY,KAAA,EAAAd,QAAA,CAAA,iBAAA,EAAAE,GAAA,CAAA;IACAa,IAAA,EAAAf,QAAA,CAAA,gBAAA,EAAAE,GAAA;EACA,CAAA;AAAA,CAAA;AAEA,IAAAkB,QAAA,GAAA,SAAAA,QAAAA,CAAAlB,GAAA;EAAA,OAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,GAAA,EAAAF,QAAA,CAAA,UAAA,EAAAE,GAAA,CAAA;IACA,IAAA,EAAAF,QAAA,CAAA,WAAA,EAAAE,GAAA,CAAA;IACA,IAAA,EAAAF,QAAA,CAAA,WAAA,EAAAE,GAAA;EACA,CAAA;AAAA,CAAA;AAEA,IAAAmB,QAAA,GAAA,SAAAA,QAAAA,CAAA7C,EAAA,EAAA8C,SAAA,EAAA;EACA,CAAA9C,EAAA,IAAA,KAAA;EACA,OAAAA,EAAA,CAAA+C,SAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAH,SAAA,CAAA;AACA,CAAA;AAEA,IAAAI,QAAA,GAAA,SAAAA,QAAAA,CAAAlD,EAAA,EAAA8C,SAAA,EAAA;EACA9C,EAAA,CAAA+C,SAAA,CAAAI,GAAA,CAAAL,SAAA,CAAA;AACA,CAAA;AAEA,IAAAM,WAAA,GAAA,SAAAA,WAAAA,CAAApD,EAAA,EAAA8C,SAAA,EAAA;EACA9C,EAAA,CAAA+C,SAAA,CAAAM,MAAA,CAAAP,SAAA,CAAA;AACA,CAAA;AAEA,IAAAQ,SAAA,GAAA,SAAAA,SAAAA,CAAAtD,EAAA,EAAA;EACA,IAAAuD,IAAA,GAAAvD,EAAA,CAAAwD,qBAAA,CAAA,CAAA;EACA,IAAAC,UAAA,GAAA1E,MAAA,CAAA2E,WAAA,IAAAhF,QAAA,CAAAiD,eAAA,CAAA8B,UAAA;EACA,IAAAE,SAAA,GAAA5E,MAAA,CAAA6E,WAAA,IAAAlF,QAAA,CAAAiD,eAAA,CAAAgC,SAAA;EACA,OAAA;IAAAE,GAAA,EAAAN,IAAA,CAAAM,GAAA,GAAAF,SAAA;IAAAG,IAAA,EAAAP,IAAA,CAAAO,IAAA,GAAAL;EAAA,CAAA;AACA,CAAA;AAEA,SAAAM,kBAAAA,CAAA/D,EAAA,EAAA;EACA,IAAAuD,IAAA,GAAAvD,EAAA,CAAAwD,qBAAA,CAAA,CAAA;EACA,IAAAQ,YAAA,GAAAjF,MAAA,CAAAkF,WAAA,IAAAvF,QAAA,CAAAiD,eAAA,CAAAuC,YAAA;EACA,IAAAC,WAAA,GAAApF,MAAA,CAAAqF,UAAA,IAAA1F,QAAA,CAAAiD,eAAA,CAAA0C,WAAA;EAEA,IAAAC,UAAA,GAAAf,IAAA,CAAAM,GAAA,IAAAG,YAAA,IAAAT,IAAA,CAAAM,GAAA,GAAAN,IAAA,CAAAgB,MAAA,IAAA,CAAA;EACA,IAAAC,SAAA,GAAAjB,IAAA,CAAAO,IAAA,IAAAK,WAAA,IAAAZ,IAAA,CAAAO,IAAA,GAAAP,IAAA,CAAAkB,KAAA,IAAA,CAAA;EAEA,OAAAH,UAAA,IAAAE,SAAA;AACA;AAEA,IAAAE,WAAA,GAAA;EACAC,EAAA,EAAA,CAAA;EACAC,EAAA,EAAA,GAAA;EACAC,EAAA,EAAA,GAAA;EACAC,EAAA,EAAA,GAAA;EACAC,EAAA,EAAA,IAAA;EACAC,GAAA,EAAA;AACA,CAAA;AAEA,IAAAC,aAAA,GAAA,SAAAA,aAAAA,CAAAjF,EAAA,EAAA;EACA,IAAAkF,OAAA,GAAAlF,EAAA,IAAAA,EAAA,CAAA+C,SAAA,CAAAC,KAAA;EACA,IAAAmC,UAAA;EACA,IAAAD,OAAA,EAAA;IACAC,UAAA,GAAAT,WAAA,CACAQ,OAAA,CACAE,KAAA,CAAA,GAAA,CAAA,CACAC,MAAA,CAAA,UAAAC,GAAA;MAAA,OAAAA,GAAA,CAAArC,QAAA,CAAA,gBAAA,CAAA;IAAA,EAAA,CACAsC,GAAA,CAAA,CAAA,CACAH,KAAA,CAAA,GAAA,CAAA,CACAG,GAAA,CAAA,CAAA,CACA;EACA;EACA,OAAAJ,UAAA;AACA,CAAA;AAEA,IAAAK,cAAA,GAAA,SAAAA,cAAAA,CAAA;EAAA,OAAAzG,MAAA,CAAA0G,UAAA,CAAA,8BAAA,CAAA,CAAAC,OAAA,GAAA,MAAA,GAAA,OAAA;AAAA,CAAA;;AAEA;;AAEA,IAAAC,SAAA,GAAA,SAAAA,SAAAA,CAAAlE,IAAA,EAAAuB,KAAA,EAAA4C,MAAA,EAAA;EACA,IAAAC,OAAA,GAAA,IAAAC,IAAA,CAAA,CAAA;EACAD,OAAA,CAAAE,OAAA,CAAAF,OAAA,CAAAG,OAAA,CAAA,CAAA,GAAAJ,MAAA,CAAA;EACAlH,QAAA,CAAAuH,MAAA,MAAArG,MAAA,CAAA6B,IAAA,OAAA7B,MAAA,CAAAoD,KAAA,eAAApD,MAAA,CAAAiG,OAAA,CAAAK,WAAA,CAAA,CAAA,CAAA;AACA,CAAA;AAEA,IAAAC,SAAA,GAAA,SAAAA,SAAAA,CAAA1E,IAAA,EAAA;EACA,IAAA2E,QAAA,GAAA1H,QAAA,CAAAuH,MAAA,CAAAI,KAAA,WAAAzG,MAAA,CAAA6B,IAAA,kBAAA,CAAA;EACA,OAAA2E,QAAA,GAAAA,QAAA,CAAA,CAAA,CAAA,GAAAA,QAAA;AACA,CAAA;AAEA,IAAAE,QAAA,GAAA;EACAC,OAAA,EAAA;IACAC,KAAA,EAAA;EACA,CAAA;EACAC,KAAA,EAAA;IACAC,WAAA,EAAA;EACA;AACA,CAAA;AACA;;AAEA,IAAAC,gBAAA,GAAA,SAAAA,gBAAAA,CAAAC,GAAA,EAAAC,YAAA,EAAA;EAAA,IAAAC,KAAA,GAAAzF,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA0F,YAAA;EACA,IAAA;IACA,OAAA7G,IAAA,CAAAC,KAAA,CAAA2G,KAAA,CAAAE,OAAA,CAAAJ,GAAA,CAAA,CAAA,IAAAC,YAAA;EACA,CAAA,CAAA,OAAAI,OAAA,EAAA;IACA,OAAAH,KAAA,CAAAE,OAAA,CAAAJ,GAAA,CAAA,IAAAC,YAAA;EACA;AACA,CAAA;AAEA,IAAAK,cAAA,GAAA,SAAAA,cAAAA,CAAAN,GAAA,EAAAO,OAAA;EAAA,IAAAL,KAAA,GAAAzF,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA0F,YAAA;EAAA,OACAD,KAAA,CAAAM,OAAA,CAAAR,GAAA,EAAAO,OAAA,CAAA;AAAA;AACA,IAAAE,aAAA,GAAA,SAAAA,aAAAA,CAAA;EAAA,IAAAP,KAAA,GAAAzF,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA0F,YAAA;EAAA,OACAO,UAAA,CACA,CACAC,MAAA,CAAAC,kBAAA,CAAAtH,IAAA,CAAAuH,SAAA,CAAAX,KAAA,CAAA,CAAA,CAAA,CAAA1H,MAAA,IACA,IAAA,GAAA,IAAA,CAAA,EACAsI,OAAA,CAAA,CAAA,CACA,CAAA;AAAA;;AAEA;;AAEA,IAAAC,QAAA,GAAA,SAAAA,QAAAA,CAAAC,SAAA,EAAAC,OAAA,EAAA;EAAA,IAAAC,QAAA,GAAAzG,SAAA,CAAAjC,MAAA,QAAAiC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAA,IAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA;EACA,IAAA0G,QAAA,GAAAF,OAAA,GAAAD,SAAA;EACA,IAAAI,KAAA,GAAAD,QAAA,GAAAD,QAAA;EACA,OAAA5I,KAAA,CAAA+I,IAAA,CACA;IAAA7I,MAAA,EAAA4I,KAAA,GAAA;EAAA,CAAA,EACA,UAAAE,CAAA,EAAAC,CAAA;IAAA,OAAA,IAAArC,IAAA,CAAA8B,SAAA,CAAAQ,OAAA,CAAA,CAAA,GAAAN,QAAA,GAAAK,CAAA,CAAA;EAAA,CACA,CAAA;AACA,CAAA;AAEA,IAAAE,YAAA,GAAA,SAAAA,YAAAA,CAAAN,QAAA,EAAA;EACA,IAAAO,IAAA;EAEA,QAAAP,QAAA;IACA,KAAA,MAAA;MACAO,IAAA,GAAA,CAAA;MACA;IACA,KAAA,OAAA;MACAA,IAAA,GAAA,EAAA;MACA;IACA,KAAA,MAAA;MACAA,IAAA,GAAA,GAAA;MACA;IAEA;MACAA,IAAA,GAAAP,QAAA;EACA;EAEA,IAAAQ,IAAA,GAAA,IAAAzC,IAAA,CAAA,CAAA;EACA,IAAA+B,OAAA,GAAAU,IAAA;EACA,IAAAX,SAAA,GAAA,IAAA9B,IAAA,CAAA,IAAAA,IAAA,CAAA,CAAA,CAAA0C,OAAA,CAAAD,IAAA,CAAAE,OAAA,CAAA,CAAA,IAAAH,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA;EACA,OAAAX,QAAA,CAAAC,SAAA,EAAAC,OAAA,CAAA;AACA,CAAA;;AAEA;AACA,IAAAa,eAAA,GAAA,SAAAA,eAAAA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OACAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,CAAA,CAAA,IAAAH,GAAA,GAAAD,GAAA,CAAA,GAAAA,GAAA,CAAA;AAAA;AAEA,IAAAK,KAAA,GAAA;EACAxK,QAAA,EAAAA,QAAA;EACAkG,WAAA,EAAAA,WAAA;EACA5F,MAAA,EAAAA,MAAA;EACAE,eAAA,EAAAA,eAAA;EACAK,QAAA,EAAAA,QAAA;EACAU,OAAA,EAAAA,OAAA;EACA8C,QAAA,EAAAA,QAAA;EACAK,QAAA,EAAAA,QAAA;EACA5C,QAAA,EAAAA,QAAA;EACAa,SAAA,EAAAA,SAAA;EACAK,QAAA,EAAAA,QAAA;EACAO,SAAA,EAAAA,SAAA;EACAY,eAAA,EAAAA,eAAA;EACAC,QAAA,EAAAA,QAAA;EACAU,SAAA,EAAAA,SAAA;EACAS,kBAAA,EAAAA,kBAAA;EACAkB,aAAA,EAAAA,aAAA;EACAU,SAAA,EAAAA,SAAA;EACAQ,SAAA,EAAAA,SAAA;EACAG,QAAA,EAAAA,QAAA;EACAK,gBAAA,EAAAA,gBAAA;EACAO,cAAA,EAAAA,cAAA;EACAG,aAAA,EAAAA,aAAA;EACAM,QAAA,EAAAA,QAAA;EACAU,YAAA,EAAAA,YAAA;EACAK,eAAA,EAAAA,eAAA;EACAtF,WAAA,EAAAA,WAAA;EACAoC,cAAA,EAAAA;AACA,CAAA;;ACzQA;AACA;AACA;;AAEA,IAAAyD,YAAA,GAAA,SAAAA,YAAAA,CAAA,EAAA;EACA,IAAAC,OAAA,GAAAnK,MAAA;IAAAoK,EAAA,GAAAD,OAAA,CAAAC,EAAA;EACA,IAAAC,IAAA,GAAA1K,QAAA,CAAA2K,aAAA,CAAA,MAAA,CAAA;EAEAF,EAAA,CAAAG,KAAA,CAAA,CAAA,IAAApG,QAAA,CAAAkG,IAAA,EAAA,OAAA,CAAA;EACAD,EAAA,CAAAI,MAAA,CAAA,CAAA,IAAArG,QAAA,CAAAkG,IAAA,EAAA,QAAA,CAAA;EACAD,EAAA,CAAAK,OAAA,CAAA,CAAA,IAAAtG,QAAA,CAAAkG,IAAA,EAAA,SAAA,CAAA;EACAD,EAAA,CAAAM,MAAA,CAAA,CAAA,IAAAvG,QAAA,CAAAkG,IAAA,EAAA,QAAA,CAAA;EACAD,EAAA,CAAAO,GAAA,CAAA,CAAA,IAAAxG,QAAA,CAAAkG,IAAA,EAAA,KAAA,CAAA;EACAD,EAAA,CAAAQ,MAAA,CAAA,CAAA,IAAAzG,QAAA,CAAAkG,IAAA,EAAA,QAAA,CAAA;EACAD,EAAA,CAAAS,IAAA,CAAA,CAAA,IAAA1G,QAAA,CAAAkG,IAAA,EAAA,MAAA,CAAA;EACAD,EAAA,CAAAU,EAAA,CAAA,CAAA,IAAA3G,QAAA,CAAAkG,IAAA,EAAA,IAAA,CAAA;EACAD,EAAA,CAAAW,IAAA,CAAA,CAAA,IAAA5G,QAAA,CAAAkG,IAAA,EAAA,MAAA,CAAA;EACAD,EAAA,CAAAY,MAAA,CAAA,CAAA,IAAA7G,QAAA,CAAAkG,IAAA,EAAA,QAAA,CAAA;EACAD,EAAA,CAAAa,GAAA,CAAA,CAAA,IAAA9G,QAAA,CAAAkG,IAAA,EAAA,KAAA,CAAA;EACAD,EAAA,CAAAc,OAAA,CAAA,CAAA,IAAA/G,QAAA,CAAAkG,IAAA,EAAA,SAAA,CAAA;EACAc,SAAA,CAAAC,SAAA,CAAA9D,KAAA,CAAA,OAAA,CAAA,IAAAnD,QAAA,CAAAkG,IAAA,EAAA,QAAA,CAAA;AACA,CAAA;;ACtBA;AACA;AACA;AAFA,IAGAgB,OAAA;EACA,SAAAA,QAAAC,IAAA,EAAA;IAAAC,eAAA,OAAAF,OAAA;IACA,IAAA,CAAAC,IAAA,GAAAA,IAAA;EACA;EAAAE,YAAA,CAAAH,OAAA;IAAAxD,GAAA;IAAA5D,KAAA,EAEA,SAAAE,SAAAJ,SAAA,EAAA;MACA,IAAA,CAAA0H,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAtH,SAAA,CAAAI,GAAA,CAAAL,SAAA,CAAA;IACA;EAAA;IAAA8D,GAAA;IAAA5D,KAAA,EAEA,SAAAI,YAAAN,SAAA,EAAA;MACA,IAAA,CAAA0H,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAtH,SAAA,CAAAM,MAAA,CAAAP,SAAA,CAAA;IACA;EAAA;IAAA8D,GAAA;IAAA5D,KAAA,EAEA,SAAAyH,YAAA3H,SAAA,EAAA;MACA,IAAA,CAAA0H,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAtH,SAAA,CAAA2H,MAAA,CAAA5H,SAAA,CAAA;IACA;EAAA;IAAA8D,GAAA;IAAA5D,KAAA,EAEA,SAAAH,SAAAC,SAAA,EAAA;MACA,IAAA,CAAA0H,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAtH,SAAA,CAAA4H,QAAA,CAAA7H,SAAA,CAAA;IACA;EAAA;IAAA8D,GAAA;IAAA5D,KAAA,EAEA,SAAA/C,KAAA2G,GAAA,EAAA;MACA,IAAA,IAAA,CAAA4D,WAAA,CAAA,CAAA,EAAA;QACA,IAAA;UACA,OAAAtK,IAAA,CAAAC,KAAA,CAAA,IAAA,CAAAkK,IAAA,CAAAjK,OAAA,CAAA,IAAA,CAAAf,QAAA,CAAAuH,GAAA,CAAA,CAAA,CAAA;QACA,CAAA,CAAA,OAAAvG,CAAA,EAAA;UACA,OAAA,IAAA,CAAAgK,IAAA,CAAAjK,OAAA,CAAA,IAAA,CAAAf,QAAA,CAAAuH,GAAA,CAAA,CAAA;QACA;MACA;MACA,OAAA,IAAA;IACA;EAAA;IAAAA,GAAA;IAAA5D,KAAA,EAEA,SAAA4H,KAAAnJ,IAAA,EAAA;MACA,OAAA,IAAA,CAAA+I,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAA5I,IAAA,CAAA;IACA;EAAA;IAAAmF,GAAA;IAAA5D,KAAA,EAEA,SAAA6H,aAAApJ,IAAA,EAAAuB,KAAA,EAAA;MACA,IAAA,CAAAwH,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAQ,YAAA,CAAApJ,IAAA,EAAAuB,KAAA,CAAA;IACA;EAAA;IAAA4D,GAAA;IAAA5D,KAAA,EAEA,SAAA8H,gBAAArJ,IAAA,EAAA;MACA,IAAA,CAAA+I,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAS,eAAA,CAAArJ,IAAA,CAAA;IACA;EAAA;IAAAmF,GAAA;IAAA5D,KAAA,EAEA,SAAA+H,QAAAtJ,IAAA,EAAAuB,KAAA,EAAA;MACA,IAAA,CAAAwH,WAAA,CAAA,CAAA,KAAA,IAAA,CAAAH,IAAA,CAAA5I,IAAA,CAAA,GAAAuB,KAAA,CAAA;IACA;EAAA;IAAA4D,GAAA;IAAA5D,KAAA,EAEA,SAAAgI,GAAAC,KAAA,EAAAC,EAAA,EAAA;MACA,IAAA,CAAAV,WAAA,CAAA,CAAA,IAAA,IAAA,CAAAH,IAAA,CAAAzL,gBAAA,CAAAqM,KAAA,EAAAC,EAAA,CAAA;IACA;EAAA;IAAAtE,GAAA;IAAA5D,KAAA,EAEA,SAAAwH,YAAA,EAAA;MACA,OAAA,CAAA,CAAA,IAAA,CAAAH,IAAA;IACA;;IAEA;EAAA;IAAAzD,GAAA;IAAA5D,KAAA,EACA,SAAA3D,SAAAC,GAAA,EAAA;MACA,IAAAC,IAAA,GAAAD,GAAA,CAAAE,OAAA,CAAA,eAAA,EAAA,UAAAC,CAAA,EAAAC,CAAA;QAAA,OAAAA,CAAA,GAAAA,CAAA,CAAAC,WAAA,CAAA,CAAA,GAAA,EAAA;MAAA,CAAA,CAAA;MACA,UAAAC,MAAA,CAAAL,IAAA,CAAAM,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAAC,WAAA,CAAA,CAAA,EAAAF,MAAA,CAAAL,IAAA,CAAAM,MAAA,CAAA,CAAA,CAAA;IACA;EAAA;EAAA,OAAAuK,OAAA;AAAA;AC7DA;AACA;AACA;AAEA,IAAAe,WAAA,GAAA,SAAAA,WAAAA,CAAA,EAAA;EACA,IAAApM,MAAA,CAAAqM,OAAA,EAAA;IACA,IAAAC,QAAA,GAAA3M,QAAA,CAAA4M,gBAAA,CAAA,gBAAA,CAAA;IACAD,QAAA,CAAAE,OAAA,CAAA,UAAAlB,IAAA,EAAA;MACA,IAAAmB,cAAA,GAAAxC,KAAA,CAAAjJ,OAAA,CAAAsK,IAAA,EAAA,SAAA,CAAA;QAAAoB,cAAA,GAAAD,cAAA,CAAAC,cAAA;QAAAC,OAAA,GAAAC,wBAAA,CAAAH,cAAA,EAAAI,SAAA;MACA,IAAAC,QAAA,GAAAH,OAAA,CAAAG,QAAA;MACA,IAAAT,OAAA,GAAA,IAAArM,MAAA,CAAAqM,OAAA,CAAAU,OAAA,CAAAzB,IAAA,EAAAwB,QAAA,EAAAE,aAAA;QACAhE,QAAA,EAAA,CAAA;QACAiE,gBAAA,EAAA;MAAA,GACAN,OAAA,CACA,CAAA;MACA,IAAA,CAAAN,OAAA,CAAAa,KAAA,IAAAR,cAAA,EAAA;QACAL,OAAA,CAAAc,MAAA,CAAAL,QAAA,CAAA;QACA,IAAA/D,QAAA,GAAAqE,WAAA,CAAA,YAAA;UACAN,QAAA,IAAA,CAAA;UACAT,OAAA,CAAAc,MAAA,CAAAL,QAAA,CAAA;QACA,CAAA,EAAA,KAAA,CAAA;QACA9M,MAAA,CAAAH,gBAAA,CAAA,OAAA,EAAA,YAAA;UACAwN,aAAA,CAAAtE,QAAA,CAAA;QACA,CAAA,CAAA;MACA,CAAA,MAAA,IAAA,CAAAsD,OAAA,CAAAa,KAAA,EAAA;QACAb,OAAA,CAAAiB,KAAA,CAAA,CAAA;MACA,CAAA,MAAA;QACAC,OAAA,CAAAL,KAAA,CAAAb,OAAA,CAAAa,KAAA,CAAA;MACA;IACA,CAAA,CAAA;EACA;AACA,CAAA;;ACjCA;AACA;AACA;;AAEA,IAAAM,UAAA,GAAA,SAAAA,UAAAA,CAAA,EAAA;EACA,IAAAC,MAAA,GAAA9N,QAAA,CAAA2K,aAAA,CAAA,8BAAA,CAAA;EAEA,IAAAmD,MAAA,EAAA;IACA,IAAAxI,YAAA,GAAAjF,MAAA,CAAAkF,WAAA;IACA,IAAAwI,WAAA,GAAA,SAAAA,WAAAA,CAAA,EAAA;MACA,IAAA9I,SAAA,GAAA5E,MAAA,CAAA2N,OAAA;MACA,IAAAnL,KAAA,GAAAoC,SAAA,GAAAK,YAAA,GAAA,CAAA;MACAzC,KAAA,IAAA,CAAA,KAAAA,KAAA,GAAA,CAAA,CAAA;MACAiL,MAAA,CAAAG,KAAA,CAAAC,eAAA,uBAAAhN,MAAA,CAAA2B,KAAA,MAAA;IACA,CAAA;IACAkL,WAAA,CAAA,CAAA;IACA/N,QAAA,CAAAE,gBAAA,CAAA,QAAA,EAAA;MAAA,OAAA6N,WAAA,CAAA,CAAA;IAAA,EAAA;EACA;EAEA,IAAAI,SAAA,GAAAnO,QAAA,CAAA2K,aAAA,CAAA,mBAAA,CAAA;EACAwD,SAAA,CAAAjO,gBAAA,CAAA,OAAA,EAAA,UAAAqM,KAAA,EAAA;IACA,IAAAA,KAAA,CAAA6B,MAAA,CAAAC,OAAA,CAAA,IAAA,CAAA,EAAA;MACA,IAAAC,aAAA,GAAAtO,QAAA,CAAA2K,aAAA,CAAA,kBAAA,CAAA;MACA,IAAA4D,mBAAA,GAAAvO,QAAA,CAAA2K,aAAA,CAAA,wBAAA,CAAA;MACA2D,aAAA,CAAAnC,YAAA,CAAA,eAAA,EAAA,KAAA,CAAA;MACAoC,mBAAA,CAAAlK,SAAA,CAAAM,MAAA,CAAA,MAAA,CAAA;MACA2J,aAAA,CAAAjK,SAAA,CAAAI,GAAA,CAAA,WAAA,CAAA;IACA;EACA,CAAA,CAAA;AACA,CAAA;;AC7BA;AACA;AACA;;AAEA,IAAA+J,eAAA,GAAA,SAAAA,eAAAA,CAAA,EAAA;EACA,IAAAC,GAAA,GAAAzO,QAAA,CAAA2K,aAAA,CAAA,mBAAA,CAAA;EAEA,IAAA8D,GAAA,EAAA;IACAA,GAAA,CAAAR,KAAA,CAAAS,OAAA,GAAA,MAAA;IACA;IACArO,MAAA,CAAAsO,QAAA,GAAA,YAAA;MAEA,IAAAtO,MAAA,CAAA2N,OAAA,GAAA,GAAA,EAAA;QACAS,GAAA,CAAAR,KAAA,CAAAS,OAAA,GAAA,OAAA;MACA,CAAA,MAAA;QACAD,GAAA,CAAAR,KAAA,CAAAS,OAAA,GAAA,MAAA;MACA;IACA,CAAA;IACAD,GAAA,CAAAvO,gBAAA,CAAA,OAAA,EAAA,YAAA;MACAG,MAAA,CAAAuO,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA;IACA,CAAA,CAAA;EACA;AACA,CAAA;;ACpBA;AACA;AACA;;AAEA,IAAAC,UAAA,GAAA,SAAAA,UAAAA,CAAA,EAAA;EACA,IAAAxO,MAAA,CAAAyO,MAAA,EAAA;IACA,IAAAC,OAAA,GAAA/O,QAAA,CAAA4M,gBAAA,CAAA,eAAA,CAAA;IACAmC,OAAA,CAAAlC,OAAA,CAAA,UAAAmC,MAAA,EAAA;MACA,IAAAhC,OAAA,GAAA1C,KAAA,CAAAjJ,OAAA,CAAA2N,MAAA,EAAA,QAAA,CAAA;MACA,IAAAC,SAAA,GAAA,IAAA5O,MAAA,CAAAyO,MAAA,CAAAE,MAAA,EAAA3B,aAAA,KACAL,OAAA,CACA,CAAA;MACA,IAAAkC,oBAAA,GAAAlP,QAAA,CAAA2K,aAAA,CACA,yBACA,CAAA;MACA,IAAAuE,oBAAA,EAAA;QACAA,oBAAA,CAAAhP,gBAAA,CAAA,wBAAA,EAAA,YAAA;UACA+O,SAAA,CAAAzB,MAAA,CAAA,CAAA;QACA,CAAA,CAAA;MACA;IACA,CAAA,CAAA;EACA;AACA,CAAA;;ACxBA;AACA;AACA;;AAEA,IAAA2B,mBAAA,GAAA,SAAAA,mBAAAA,CAAA,EAAA;EACA,IAAAC,cAAA,GAAApP,QAAA,CAAA4M,gBAAA,CAAA,+BAAA,CAAA;EACA,IAAAwC,cAAA,EAAA;IACAA,cAAA,CAAAvC,OAAA,CAAA,UAAAwC,MAAA,EAAA;MACA,IAAAC,WAAA,GAAAD,MAAA,CAAA1E,aAAA,CAAA,oBAAA,CAAA;MACA,IAAA4E,UAAA,GAAAF,MAAA,CAAA1E,aAAA,CAAA,oBAAA,CAAA;MAEA,IAAA6E,gBAAA,GAAA,SAAAA,gBAAAA,CAAA,EAAA;QACAH,MAAA,CAAAhL,SAAA,CAAA2H,MAAA,CAAA,qBAAA,CAAA;QACAqD,MAAA,CAAAhL,SAAA,CAAA2H,MAAA,CAAA,mBAAA,CAAA;MACA,CAAA;MAEA,IAAAyD,gBAAA,GAAA,SAAAA,gBAAAA,CAAA,EAAA;QACAJ,MAAA,CAAAhL,SAAA,CAAA2H,MAAA,CAAA,mBAAA,CAAA;QACAqD,MAAA,CAAAhL,SAAA,CAAA2H,MAAA,CAAA,qBAAA,CAAA;MACA,CAAA;MACAuD,UAAA,CAAArP,gBAAA,CAAA,OAAA,EAAA,YAAA;QACA,IAAAoP,WAAA,CAAAI,MAAA,EAAA;UACAJ,WAAA,CAAAK,IAAA,CAAA,CAAA;UACAF,gBAAA,CAAA,CAAA;QACA,CAAA,MAAA;UACAH,WAAA,CAAAM,KAAA,CAAA,CAAA;UACAJ,gBAAA,CAAA,CAAA;QACA;MACA,CAAA,CAAA;MACAF,WAAA,CAAApP,gBAAA,CAAA,OAAA,EAAAuP,gBAAA,CAAA;IACA,CAAA,CAAA;EACA;AACA,CAAA;;ACzBA;AACA;AACA;AACA3P,QAAA,CAAAyK,YAAA,CAAA;AACAzK,QAAA,CAAA+N,UAAA,CAAA;AACA/N,QAAA,CAAA+O,UAAA,CAAA;AACA/O,QAAA,CAAA2M,WAAA,CAAA;AACA3M,QAAA,CAAA0O,eAAA,CAAA;AACA1O,QAAA,CAAAqP,mBAAA,CAAA","file":"theme.js","sourcesContent":["/* -------------------------------------------------------------------------- */\n/*                                    Utils                                   */\n/* -------------------------------------------------------------------------- */\nconst docReady = fn => {\n  // see if DOM is already available\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', fn);\n  } else {\n    setTimeout(fn, 1);\n  }\n};\n\nconst resize = fn => window.addEventListener('resize', fn);\n\nconst isIterableArray = array => Array.isArray(array) && !!array.length;\n\nconst camelize = str => {\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) =>\n    c ? c.toUpperCase() : ''\n  );\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\n};\n\nconst getData = (el, data) => {\n  try {\n    return JSON.parse(el.dataset[camelize(data)]);\n  } catch (e) {\n    return el.dataset[camelize(data)];\n  }\n};\n\n/* ----------------------------- Colors function ---------------------------- */\n\nconst hexToRgb = hexValue => {\n  let hex;\n  hexValue.indexOf('#') === 0\n    ? (hex = hexValue.substring(1))\n    : (hex = hexValue);\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(\n    hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b)\n  );\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ]\n    : null;\n};\n\nconst rgbaColor = (color = '#fff', alpha = 0.5) =>\n  `rgba(${hexToRgb(color)}, ${alpha})`;\n\n/* --------------------------------- Colors --------------------------------- */\n\nconst getColor = (name, dom = document.documentElement) =>\n  getComputedStyle(dom).getPropertyValue(`--brainwaveio-${name}`).trim();\n\nconst getColors = dom => ({\n  primary: getColor('primary', dom),\n  secondary: getColor('secondary', dom),\n  success: getColor('success', dom),\n  info: getColor('info', dom),\n  warning: getColor('warning', dom),\n  danger: getColor('danger', dom),\n  light: getColor('light', dom),\n  dark: getColor('dark', dom),\n  white: getColor('white', dom),\n  black: getColor('black', dom),\n  emphasis: getColor('emphasis-color', dom)\n});\n\nconst getSubtleColors = dom => ({\n  primary: getColor('primary-bg-subtle', dom),\n  secondary: getColor('secondary-bg-subtle', dom),\n  success: getColor('success-bg-subtle', dom),\n  info: getColor('info-bg-subtle', dom),\n  warning: getColor('warning-bg-subtle', dom),\n  danger: getColor('danger-bg-subtle', dom),\n  light: getColor('light-bg-subtle', dom),\n  dark: getColor('dark-bg-subtle', dom)\n});\n\nconst getGrays = dom => ({\n  100: getColor('gray-100', dom),\n  200: getColor('gray-200', dom),\n  300: getColor('gray-300', dom),\n  400: getColor('gray-400', dom),\n  500: getColor('gray-500', dom),\n  600: getColor('gray-600', dom),\n  700: getColor('gray-700', dom),\n  800: getColor('gray-800', dom),\n  900: getColor('gray-900', dom),\n  1000: getColor('gray-1000', dom),\n  1100: getColor('gray-1100', dom)\n});\n\nconst hasClass = (el, className) => {\n  !el && false;\n  return el.classList.value.includes(className);\n};\n\nconst addClass = (el, className) => {\n  el.classList.add(className);\n};\n\nconst removeClass = (el, className) => {\n  el.classList.remove(className);\n};\n\nconst getOffset = el => {\n  const rect = el.getBoundingClientRect();\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n};\n\nfunction isScrolledIntoView(el) {\n  const rect = el.getBoundingClientRect();\n  const windowHeight =\n    window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n  const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n\n  return vertInView && horInView;\n}\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1540\n};\n\nconst getBreakpoint = el => {\n  const classes = el && el.classList.value;\n  let breakpoint;\n  if (classes) {\n    breakpoint =\n      breakpoints[\n        classes\n          .split(' ')\n          .filter(cls => cls.includes('navbar-expand-'))\n          .pop()\n          .split('-')\n          .pop()\n      ];\n  }\n  return breakpoint;\n};\n\nconst getSystemTheme = () => (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');\n\n/* --------------------------------- Cookie --------------------------------- */\n\nconst setCookie = (name, value, expire) => {\n  const expires = new Date();\n  expires.setTime(expires.getTime() + expire);\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`;\n};\n\nconst getCookie = name => {\n  const keyValue = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\n  return keyValue ? keyValue[2] : keyValue;\n};\n\nconst settings = {\n  tinymce: {\n    theme: 'oxide'\n  },\n  chart: {\n    borderColor: 'rgba(255, 255, 255, 0.8)'\n  }\n};\n/* ---------------------------------- Store --------------------------------- */\n\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\n  try {\n    return JSON.parse(store.getItem(key)) || defaultValue;\n  } catch {\n    return store.getItem(key) || defaultValue;\n  }\n};\n\nconst setItemToStore = (key, payload, store = localStorage) =>\n  store.setItem(key, payload);\nconst getStoreSpace = (store = localStorage) =>\n  parseFloat(\n    (\n      escape(encodeURIComponent(JSON.stringify(store))).length /\n      (1024 * 1024)\n    ).toFixed(2)\n  );\n\n/* get Dates between */\n\nconst getDates = (startDate, endDate, interval = 1000 * 60 * 60 * 24) => {\n  const duration = endDate - startDate;\n  const steps = duration / interval;\n  return Array.from(\n    { length: steps + 1 },\n    (v, i) => new Date(startDate.valueOf() + interval * i)\n  );\n};\n\nconst getPastDates = duration => {\n  let days;\n\n  switch (duration) {\n    case 'week':\n      days = 7;\n      break;\n    case 'month':\n      days = 30;\n      break;\n    case 'year':\n      days = 365;\n      break;\n\n    default:\n      days = duration;\n  }\n\n  const date = new Date();\n  const endDate = date;\n  const startDate = new Date(new Date().setDate(date.getDate() - (days - 1)));\n  return getDates(startDate, endDate);\n};\n\n/* Get Random Number */\nconst getRandomNumber = (min, max) =>\n  Math.floor(Math.random() * (max - min) + min);\n\nconst utils = {\n  docReady,\n  breakpoints,\n  resize,\n  isIterableArray,\n  camelize,\n  getData,\n  hasClass,\n  addClass,\n  hexToRgb,\n  rgbaColor,\n  getColor,\n  getColors,\n  getSubtleColors,\n  getGrays,\n  getOffset,\n  isScrolledIntoView,\n  getBreakpoint,\n  setCookie,\n  getCookie,\n  settings,\n  getItemFromStore,\n  setItemToStore,\n  getStoreSpace,\n  getDates,\n  getPastDates,\n  getRandomNumber,\n  removeClass,\n  getSystemTheme\n};\n\nexport default utils;\n","import { addClass } from './utils';\n/* -------------------------------------------------------------------------- */\n/*                                  Detector                                  */\n/* -------------------------------------------------------------------------- */\n\nconst detectorInit = () => {\n  const { is } = window;\n  const html = document.querySelector('html');\n\n  is.opera() && addClass(html, 'opera');\n  is.mobile() && addClass(html, 'mobile');\n  is.firefox() && addClass(html, 'firefox');\n  is.safari() && addClass(html, 'safari');\n  is.ios() && addClass(html, 'ios');\n  is.iphone() && addClass(html, 'iphone');\n  is.ipad() && addClass(html, 'ipad');\n  is.ie() && addClass(html, 'ie');\n  is.edge() && addClass(html, 'edge');\n  is.chrome() && addClass(html, 'chrome');\n  is.mac() && addClass(html, 'osx');\n  is.windows() && addClass(html, 'windows');\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\n};\n\nexport default detectorInit;\n","/*-----------------------------------------------\n|   DomNode\n-----------------------------------------------*/\nclass DomNode {\n  constructor(node) {\n    this.node = node;\n  }\n\n  addClass(className) {\n    this.isValidNode() && this.node.classList.add(className);\n  }\n\n  removeClass(className) {\n    this.isValidNode() && this.node.classList.remove(className);\n  }\n\n  toggleClass(className) {\n    this.isValidNode() && this.node.classList.toggle(className);\n  }\n\n  hasClass(className) {\n    this.isValidNode() && this.node.classList.contains(className);\n  }\n\n  data(key) {\n    if (this.isValidNode()) {\n      try {\n        return JSON.parse(this.node.dataset[this.camelize(key)]);\n      } catch (e) {\n        return this.node.dataset[this.camelize(key)];\n      }\n    }\n    return null;\n  }\n\n  attr(name) {\n    return this.isValidNode() && this.node[name];\n  }\n\n  setAttribute(name, value) {\n    this.isValidNode() && this.node.setAttribute(name, value);\n  }\n\n  removeAttribute(name) {\n    this.isValidNode() && this.node.removeAttribute(name);\n  }\n\n  setProp(name, value) {\n    this.isValidNode() && (this.node[name] = value);\n  }\n\n  on(event, cb) {\n    this.isValidNode() && this.node.addEventListener(event, cb);\n  }\n\n  isValidNode() {\n    return !!this.node;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  camelize(str) {\n    const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\n    return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\n  }\n}\n\nexport default DomNode;\n","import utils from './utils';\n\n/* -------------------------------------------------------------------------- */\n/*                                  Count Up                                  */\n/* -------------------------------------------------------------------------- */\n\nconst countupInit = () => {\n  if (window.countUp) {\n    const countups = document.querySelectorAll('[data-countup]');\n    countups.forEach((node) => {\n      const { autoIncreasing, ...options } = utils.getData(node, 'countup');\n      let { endValue } = options;\n      const countUp = new window.countUp.CountUp(node, endValue, {\n        duration: 5,\n        enableScrollOnce: true,\n        ...options,\n      });\n      if (!countUp.error && autoIncreasing) {\n        countUp.update(endValue);\n        const interval = setInterval(() => {\n          endValue += 1;\n          countUp.update(endValue);\n        }, 10000);\n        window.addEventListener('close', () => {\n          clearInterval(interval);\n        });\n      } else if (!countUp.error) {\n        countUp.start();\n      } else {\n        console.error(countUp.error);\n      }\n    });\n  }\n};\n\nexport default countupInit;\n","/*-----------------------------------------------\n|  Navbar\n-----------------------------------------------*/\n\nconst navbarInit = () => {\n  const navbar = document.querySelector('[data-navbar-soft-on-scroll]');\n\n  if (navbar) {\n    const windowHeight = window.innerHeight;\n    const handleAlpha = () => {\n      const scrollTop = window.scrollY;\n      let alpha = (scrollTop / windowHeight) * 2;\n      alpha >= 1 && (alpha = 1);\n      navbar.style.backgroundColor = `rgba(49, 60, 89, ${alpha})`;\n    };\n    handleAlpha();\n    document.addEventListener('scroll', () => handleAlpha());\n  }\n\n  const navbarNav = document.querySelector('[data-navbar-nav]');\n  navbarNav.addEventListener('click', (event) => {\n    if (event.target.closest('li')) {\n      const navbarToggler = document.querySelector('[data-bs-toggle]');\n      const navbarItemContainer = document.querySelector('[data-navbar-collapse]');\n      navbarToggler.setAttribute('aria-expanded', false);\n      navbarItemContainer.classList.remove('show');\n      navbarToggler.classList.add('collapsed');\n    }\n  });\n};\n\nexport default navbarInit;\n","/*-----------------------------------------------\n|  Scroll To Top\n-----------------------------------------------*/\n\nconst scrollToTopInit = () => {\n  const btn = document.querySelector('[data-scroll-top]');\n\n  if (btn) {\n    btn.style.display = 'none';\n    // eslint-disable-next-line func-names\n    window.onscroll = () => {\n\n      if (window.scrollY > 550) {\n        btn.style.display = 'block';\n      } else {\n        btn.style.display = 'none';\n      }\n    };\n    btn.addEventListener('click', () => {\n      window.scrollTo(0, 0);\n    });\n  }\n};\n\nexport default scrollToTopInit;\n","import utils from './utils';\n\n/*-----------------------------------------------\n|  Swiper\n-----------------------------------------------*/\n\nconst swiperInit = () => {\n  if (window.Swiper) {\n    const swipers = document.querySelectorAll('[data-swiper]');\n    swipers.forEach(swiper => {\n      const options = utils.getData(swiper, 'swiper');\n      const newSwiper = new window.Swiper(swiper, {\n        ...options\n      });\n      const navbarVerticalToggle = document.querySelector(\n        '.navbar-vertical-toggle'\n      );\n      if (navbarVerticalToggle) {\n        navbarVerticalToggle.addEventListener('navbar.vertical.toggle', () => {\n          newSwiper.update();\n        });\n      }\n    });\n  }\n};\n\nexport default swiperInit;\n","/* -------------------------------------------------------------------------- */\n/*                    Video Controller                                        */\n/* -------------------------------------------------------------------------- */\n\nconst videoControllerInit = () => {\n  const videoContainer = document.querySelectorAll('[data-video-player-container]');\n  if (videoContainer) {\n    videoContainer.forEach(parent => {\n      const videoPlayer = parent.querySelector('[data-video-player');\n      const playButton = parent.querySelector('[data-play-button]');\n\n      const videoPlayedState = () => {\n        parent.classList.toggle('video-player-paused');\n        parent.classList.toggle('video-player-play');\n      };\n\n      const videoPuasedState = () => {\n        parent.classList.toggle('video-player-play');\n        parent.classList.toggle('video-player-paused');\n      };\n      playButton.addEventListener('click', () => {\n        if (videoPlayer.paused) {\n          videoPlayer.play();\n          videoPuasedState();\n        } else {\n          videoPlayer.pause();\n          videoPlayedState();\n        }\n      });\n      videoPlayer.addEventListener('ended', videoPuasedState);\n    });\n  }\n};\n\nexport default videoControllerInit;\n","import { docReady } from './utils';\nimport detectorInit from './detector';\nimport navbarInit from './navbar';\nimport swiperInit from './swiper';\nimport countupInit from './countup';\nimport scrollToTopInit from './scroll-to-top';\nimport videoControllerInit from './video-controller';\n/* -------------------------------------------------------------------------- */\n/*                            Theme Initialization                            */\n/* -------------------------------------------------------------------------- */\ndocReady(detectorInit);\ndocReady(navbarInit);\ndocReady(swiperInit);\ndocReady(countupInit);\ndocReady(scrollToTopInit);\ndocReady(videoControllerInit);\n"]}